---
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";
import { Icon } from "astro-icon/components";
import BaseLayout from "../../layouts/BaseLayout.astro";
import ArticleCard from "../../components/articles/ArticleCard.astro";

export const getStaticPaths = (async ({ paginate }) => {
	const posts = (await getCollection("blog")).sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
	);

	return paginate(posts, { pageSize: 5 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const pageNums = Array.from({ length: page.lastPage }, (_, i) => i + 1);

// SEO properties
const title =
	page.currentPage === 1 ? "Blog" : `Blog - Page ${page.currentPage}`;
const description =
	"The undead musings of Lorenzo di Lume Nero—full stack developer, vampire, and former cooper. Coding tales, dark tech humor, and supernatural insights from Transylvania's bleeding-edge dev scene.";
---

<BaseLayout title={title} description={description}>
	<div class="mx-auto max-w-2xl lg:max-w-4xl">
		<header class="mb-20 max-w-2xl">
			<h1 class="text-4xl md:text-6xl font-black tracking-tight mb-8">
				Blog
			</h1>

			<p>
				Tech, blood, and the occasional full moon meltdown. Sink your
				teeth into the articles below. They won’t bite (unless I wrote
				them after feeding time).
			</p>
		</header>

		<section>
			<div class="space-y-10 sm:space-y-14">
				{
					page.data.map((post, index) => (
						<div>
							<ArticleCard post={post} />
						</div>
					))
				}
			</div>
			{
				page.lastPage > 1 && (
					<div class="flex justify-center my-20">
						<nav class="mx-auto inline-flex text-slate-700 dark:text-slate-400 rounded-lg -space-x-px">
							{page.url.prev && (
								<a
									href={page.url.prev}
									class="inline-flex items-center justify-center w-10 h-10 ring-1 ring-inset ring-slate-300 dark:ring-slate-600 hover:bg-slate-100 dark:hover:bg-slate-700"
								>
									<Icon name="heroicons:chevron-left-16-solid" />
								</a>
							)}
							{pageNums.map((num) =>
								num === page.currentPage ? (
									<span class="inline-flex items-center justify-center w-10 h-10 bg-primary-600 text-white">
										{num}
									</span>
								) : (
									<a
										href={`${num === 1 ? "/blog" : "/blog/" + num}`}
										class="inline-flex items-center justify-center w-10 h-10 ring-1 ring-inset ring-slate-300 dark:ring-slate-600 hover:bg-slate-100 dark:hover:bg-slate-700"
									>
										{num}
									</a>
								),
							)}
							{page.url.next && (
								<a
									href={page.url.next}
									class="inline-flex items-center justify-center w-10 h-10 ring-1 ring-inset ring-slate-300 dark:ring-slate-600 hover:bg-slate-100 dark:hover:bg-slate-700"
								>
									<Icon name="heroicons:chevron-right-16-solid" />
								</a>
							)}
						</nav>
					</div>
				)
			}
		</section>
	</div>
</BaseLayout>
